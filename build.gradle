plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
    id 'org.sonarqube' version '4.0.0.2929'
    id 'checkstyle'
    id 'org.owasp.dependencycheck' version '8.4.0'
}

group = 'es.in2'
version = '0.6.0'

java {
    sourceCompatibility = '17'
}

jacoco {
    toolVersion = "0.8.9"
}

checkstyle {
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

checkstyleMain {
    source = 'src/main/java'
}

checkstyleTest {
    source = 'src/test/java'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // DevTools
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    // JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    // Logback
    implementation 'ch.qos.logback:logback-classic:1.5.6'
    implementation 'ch.qos.logback:logback-core:1.5.6'
    implementation 'net.logstash.logback:logstash-logback-encoder:8.0'
    // Crypto
    implementation 'org.springframework.vault:spring-vault-core:3.1.1'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.78'
    implementation 'com.sun.xml.bind:jaxb-core:4.0.5'
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.5'
    implementation 'org.javassist:javassist:3.30.2-GA'
    // DSS Library
    implementation 'eu.europa.ec.joinup.sd-dss:dss-jades:6.0'
    implementation 'eu.europa.ec.joinup.sd-dss:dss-token:6.0'
    implementation 'eu.europa.ec.joinup.sd-dss:dss-service:6.0'
    implementation 'eu.europa.ec.joinup.sd-dss:dss-utils-google-guava:6.0'
    implementation 'eu.europa.ec.joinup.sd-dss:dss-tsl-validation:6.0'
    // COSE
    implementation 'io.github.ehn-digital-green-development:base45:0.0.3'
    implementation 'org.apache.commons:commons-compress:1.26.1'
    implementation 'com.upokecenter:cbor:4.5.1'
    implementation 'com.augustcellars.cose:cose-java:1.1.0'
    // Azure
    implementation 'com.azure.spring:spring-cloud-azure-starter-appconfiguration:5.16.0'
    implementation 'com.azure.spring:spring-cloud-azure-starter-keyvault-secrets:5.16.0'
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


tasks.named('compileJava') {
    inputs.files(tasks.named('processResources'))
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy(tasks.jacocoTestReport)
}

tasks.jacocoTestReport {
    dependsOn(tasks.test)
    reports {
        xml.required.set(true)
        csv.required.set(false)
        html.outputLocation.set(layout.buildDirectory.dir("jacocoHtml"))
    }
    classDirectories.setFrom(files(classDirectories.files.collect {
        fileTree(dir: it, exclude: [
                '**/DSSApiApplication**',
                '**/config/**',
                '**/enums/**'
        ])
    }))
}

tasks.register('printVersion') {
    doLast {
        println version
    }
}

tasks.register('printProjectName') {
    doLast {
        println rootProject.name
    }
}
